{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_hypedown-parser-xxx-temp.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN-PARSER/XXX-TEMP-HTML'\n#...........................................................................................................\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\n{ DATOM }                 = require 'datom'\n#...........................................................................................................\n{ new_datom\n  lets\n  stamp }                = DATOM\n#...........................................................................................................\n{ Pipeline\n  Pipeline_module\n  $\n  transforms }            = require 'moonriver'\n#...........................................................................................................\n{ misfit\n  get_base_types }        = require './types'\nE                         = require './errors'\nH                         = require './helpers'\n{ Hypedown_parser_stars } = require './_hypedown-parser-stars'\n{ Hypedown_parser_htmlish } \\\n                          = require './_hypedown-parser-htmlish'\n{ Hypedown_lexer }        = require './_hypedown-lexer'\n\n\n#===========================================================================================================\nclass @$001_Prelude extends Pipeline_module\n\n\n#===========================================================================================================\nclass @$010_prepare_paragraphs extends Pipeline_module\n\n  #---------------------------------------------------------------------------------------------------------\n  $inject_virtual_nl: ->\n    ### normalize start of document by injecting two newlines. ###\n    is_first  = true\n    mode      = 'plain'\n    tid       = 'nl'\n    mk        = \"#{mode}:#{tid}\"\n    return ( d, send ) ->\n      return send d unless is_first\n      is_first = false\n      send { mode, tid, mk, jump: null, value: '', lnr1: 1, x1: 0, lnr2: 1, x2: 0, \\\n        data: { virtual: true, }, $key: '^plain', $: 'inject_virtual_nl', }\n      send { mode, tid, mk, jump: null, value: '', lnr1: 1, x1: 0, lnr2: 1, x2: 0, \\\n        data: { virtual: true, }, $key: '^plain', $: 'inject_virtual_nl', }\n      send d\n\n  #---------------------------------------------------------------------------------------------------------\n  $add_parbreak_markers: -> ### needs inject_virtual_nl ###\n    mode        = 'plain'\n    newline_lx  = \"#{mode}:nl\"\n    tid         = 'parbreak'\n    mk          = \"html:#{tid}\"\n    p           = new Pipeline()\n    template    = { \\\n        mode: 'html', tid, mk, value: '', \\\n        $key: '^html', $: 'add_parbreak_markers', }\n    p.push window = transforms.$window { min: -2, max: 0, empty: null, }\n    p.push add_parbreak_markers = ( [ lookbehind, previous, current, ], send ) ->\n      return send current unless ( H.select_token lookbehind,  newline_lx )\n      return send current unless ( H.select_token previous,    newline_lx )\n      return send current if     ( H.select_token current,     newline_lx )\n      send { template..., ( GUY.props.pick_with_fallback current, null, 'lnr1', 'x1', 'lnr2', 'x2', )..., }\n      send current\n    return p\n\n\n\n"
  ]
}