{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_hypedown-parser.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN-PARSER'\n#...........................................................................................................\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\n{ DATOM }                 = require 'datom'\n#...........................................................................................................\n{ new_datom\n  lets\n  stamp }                = DATOM\n#...........................................................................................................\n{ Pipeline\n  $\n  transforms }            = require 'moonriver'\n#...........................................................................................................\n{ misfit\n  get_base_types }        = require './types'\nE                         = require './errors'\nH                         = require './helpers'\n{ Hypedown_parser_stars } = require './_hypedown-parser-stars'\n{ Hypedown_parser_htmlish } \\\n                          = require './_hypedown-parser-htmlish'\n{ Hypedown_lexer }        = require './_hypedown-lexer'\nXXX_TEMP                  = require './_hypedown-parser-xxx-temp'\n{ XXX_Hypedown_transforms }   = require './_hypedown-parser-xxx-transforms'\n\n\n\n#===========================================================================================================\nclass Hypedown_parser\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    @types        = get_base_types()\n    @cfg          = Object.freeze @types.create.hd_parser_cfg cfg\n    @lexer        = new Hypedown_lexer()\n    # debug '^234^', @lexer\n    @_build_pipeline()\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _build_pipeline: ->\n    tfs       = new XXX_Hypedown_transforms()\n    @pipeline = new Pipeline()\n    #.........................................................................................................\n    @pipeline.push new XXX_TEMP.$001_Prelude()\n    @pipeline.push tokenize_line = ( line, send ) =>\n      @types.validate.text line\n      send token for token from @lexer.walk line\n      return null\n    # @pipeline.push tfs.$show_lexer_tokens()\n    @pipeline.push new XXX_TEMP.$010_prepare_paragraphs()\n    @pipeline.push new XXX_TEMP.$020_priority_markup()\n    @pipeline.push new XXX_TEMP.$030_htmlish_tags()\n    @pipeline.push new XXX_TEMP.$040_stars()\n    @pipeline.push new XXX_TEMP.$050_hash_headings()\n    @pipeline.push tfs.$capture_text()\n    @pipeline.push tfs.$generate_missing_p_tags()\n    @pipeline.push tfs.$generate_html_nls { mode: 'plain', tid: 'nl', } ### NOTE removes virtual nl, should come late ###\n    @pipeline.push tfs.$convert_escaped_chrs()\n    @pipeline.push tfs.$stamp_borders()\n    # @pipeline.push ( d ) -> urge '^_build_pipeline@5^', rpr d\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  send: ( P... ) -> @pipeline.send P...\n  run:  ( P... ) -> @pipeline.run  P...\n  walk: ( P... ) -> @pipeline.walk P...\n  step: ( P... ) -> @pipeline.step P...\n\n\n#===========================================================================================================\nmodule.exports = { Hypedown_parser, }\n"
  ]
}