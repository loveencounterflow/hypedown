{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_hypedown-parser-stars.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN-PARSER/TRANSFORM-STARS'\n#...........................................................................................................\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\n{ DATOM }                 = require 'datom'\n#...........................................................................................................\n{ new_datom\n  lets\n  stamp }                = DATOM\n#...........................................................................................................\n{ Pipeline\n  $\n  transforms }            = require 'moonriver'\n#...........................................................................................................\n{ misfit\n  get_base_types }        = require './types'\nE                         = require './errors'\nH                         = require './helpers'\n{ sorter }                = require 'intertext-lexer'\n\n#===========================================================================================================\n@Hypedown_parser_stars = ( clasz = Object ) => class extends clasz\n\n  #---------------------------------------------------------------------------------------------------------\n  $parse_md_stars: ->\n    star1_mk        = 'plain:star1'\n    star2_mk        = 'plain:star2'\n    star3_mk        = 'plain:star3'\n    #.......................................................................................................\n    within =\n      star1:    false\n      star2:    false\n    token_for =\n      star1:    null\n      star2:    null\n    #.......................................................................................................\n    enter = ( region, token ) ->\n      within[     region ] = true\n      token_for[  region ] = token\n      return null\n    enter.star1 = ( token ) -> enter 'star1', token\n    enter.star2 = ( token ) -> enter 'star2', token\n    #.......................................................................................................\n    exit = ( region ) ->\n      within[   region ] = false\n      token_for[ region ] = null\n      return null\n    exit.star1 = -> exit 'star1'\n    exit.star2 = -> exit 'star2'\n    #.......................................................................................................\n    return ( d, send ) ->\n      switch d.mk\n        #...................................................................................................\n        when star1_mk\n          send stamp d\n          if within.star1 then  exit.star1();         send H.XXX_new_token 'parse_md_stars@1^', d, 'html', 'tag', 'i', '</i>'\n          else                  enter.star1 d;        send H.XXX_new_token 'parse_md_stars@2^', d, 'html', 'tag', 'i', '<i>'\n        #...................................................................................................\n        when star2_mk\n          send stamp d\n          if within.star2\n            if within.star1\n              if sorter.ordering_is token_for.star2, token_for.star1\n                exit.star1();         send H.XXX_new_token 'parse_md_stars@3^', d, 'html', 'tag', 'i', '</i>'\n                exit.star2();         send H.XXX_new_token 'parse_md_stars@4^', d, 'html', 'tag', 'b', '</b>'\n                enter.star1 d;        send H.XXX_new_token 'parse_md_stars@5^', d, 'html', 'tag', 'i', '<i>'\n              else\n                exit.star2();         send H.XXX_new_token 'parse_md_stars@6^', d, 'html', 'tag', 'b', '</b>'\n            else\n              exit.star2();         send H.XXX_new_token 'parse_md_stars@7^', d, 'html', 'tag', 'b', '</b>'\n          else\n            enter.star2 d;        send H.XXX_new_token 'parse_md_stars@8^', d, 'html', 'tag', 'b', '<b>'\n        #...................................................................................................\n        when star3_mk\n          send stamp d\n          if within.star1\n            if within.star2\n              if sorter.ordering_is token_for.star2, token_for.star1\n                exit.star1();       send H.XXX_new_token 'parse_md_stars@9^', d, 'html', 'tag', 'i', '</i>'\n                exit.star2();       send H.XXX_new_token 'parse_md_stars@10^', d, 'html', 'tag', 'b', '</b>'\n              else\n                exit.star2();       send H.XXX_new_token 'parse_md_stars@11^', d, 'html', 'tag', 'b', '</b>'\n                exit.star1();       send H.XXX_new_token 'parse_md_stars@12^', d, 'html', 'tag', 'i', '</i>'\n            else\n              exit.star1();         send H.XXX_new_token 'parse_md_stars@13^', d, 'html', 'tag', 'i', '</i>'\n              enter.star2 d;        send H.XXX_new_token 'parse_md_stars@14^', d, 'html', 'tag', 'b', '<b>'\n          else\n            if within.star2\n              exit.star2();         send H.XXX_new_token 'parse_md_stars@15^', d, 'html', 'tag', 'b', '</b>'\n              enter.star1 d;        send H.XXX_new_token 'parse_md_stars@16^', d, 'html', 'tag', 'i', '<i>'\n            else\n              enter.star2 d;        send H.XXX_new_token 'parse_md_stars@17^', d, 'html', 'tag', 'b', '<b>'\n              position = { lnr1: d.lnr1, x1: d.x1 + 2, lnr2: d.lnr2, x2: d.x2, }\n              enter.star1 position; send H.XXX_new_token 'parse_md_stars@18^', \\\n                position, 'html', 'tag', 'i', '<i>'\n        #...................................................................................................\n        else send d\n      return null\n"
  ]
}