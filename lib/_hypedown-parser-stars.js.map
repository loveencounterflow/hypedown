{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/_hypedown-parser-stars.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN-PARSER/TRANSFORM-STARS'\n#...........................................................................................................\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\n{ DATOM }                 = require 'datom'\n{ new_datom\n  lets\n  stamp  }                = DATOM\nE                         = require './errors'\nH                         = require './helpers'\n{ Pipeline_module }       = require 'moonriver'\n{ sorter }                = require 'intertext-lexer'\n\n\n#===========================================================================================================\nclass @Hypedown_parser_md_stars extends Pipeline_module\n\n  #-----------------------------------------------------------------------------------------------------------\n  $parse_md_stars: ->\n    star1_mk        = 'plain:star1'\n    star2_mk        = 'plain:star2'\n    star3_mk        = 'plain:star3'\n    #.........................................................................................................\n    within =\n      star1:    false\n      star2:    false\n    token_for =\n      star1:    null\n      star2:    null\n    #.........................................................................................................\n    enter = ( region, token ) ->\n      within[     region ] = true\n      token_for[  region ] = token\n      return null\n    enter.star1 = ( token ) -> enter 'star1', token\n    enter.star2 = ( token ) -> enter 'star2', token\n    #.........................................................................................................\n    exit = ( region ) ->\n      within[   region ] = false\n      token_for[ region ] = null\n      return null\n    exit.star1 = -> exit 'star1'\n    exit.star2 = -> exit 'star2'\n    #.........................................................................................................\n    return parse_md_stars = ( d, send ) ->\n      switch d.mk\n        #.....................................................................................................\n        when star1_mk\n          send stamp d\n          if within.star1 then  exit.star1();         send H.XXX_new_token 'parse_md_stars@1^', d, 'html', 'tag', 'i', '</i>'\n          else                  enter.star1 d;        send H.XXX_new_token 'parse_md_stars@2^', d, 'html', 'tag', 'i', '<i>'\n        #.....................................................................................................\n        when star2_mk\n          send stamp d\n          if within.star2\n            if within.star1\n              if sorter.ordering_is token_for.star2, token_for.star1\n                exit.star1();         send H.XXX_new_token 'parse_md_stars@3^', d, 'html', 'tag', 'i', '</i>'\n                exit.star2();         send H.XXX_new_token 'parse_md_stars@4^', d, 'html', 'tag', 'b', '</b>'\n                enter.star1 d;        send H.XXX_new_token 'parse_md_stars@5^', d, 'html', 'tag', 'i', '<i>'\n              else\n                exit.star2();         send H.XXX_new_token 'parse_md_stars@6^', d, 'html', 'tag', 'b', '</b>'\n            else\n              exit.star2();         send H.XXX_new_token 'parse_md_stars@7^', d, 'html', 'tag', 'b', '</b>'\n          else\n            enter.star2 d;        send H.XXX_new_token 'parse_md_stars@8^', d, 'html', 'tag', 'b', '<b>'\n        #.....................................................................................................\n        when star3_mk\n          send stamp d\n          if within.star1\n            if within.star2\n              if sorter.ordering_is token_for.star2, token_for.star1\n                exit.star1();       send H.XXX_new_token 'parse_md_stars@9^', d, 'html', 'tag', 'i', '</i>'\n                exit.star2();       send H.XXX_new_token 'parse_md_stars@10^', d, 'html', 'tag', 'b', '</b>'\n              else\n                exit.star2();       send H.XXX_new_token 'parse_md_stars@11^', d, 'html', 'tag', 'b', '</b>'\n                exit.star1();       send H.XXX_new_token 'parse_md_stars@12^', d, 'html', 'tag', 'i', '</i>'\n            else\n              exit.star1();         send H.XXX_new_token 'parse_md_stars@13^', d, 'html', 'tag', 'i', '</i>'\n              enter.star2 d;        send H.XXX_new_token 'parse_md_stars@14^', d, 'html', 'tag', 'b', '<b>'\n          else\n            if within.star2\n              exit.star2();         send H.XXX_new_token 'parse_md_stars@15^', d, 'html', 'tag', 'b', '</b>'\n              enter.star1 d;        send H.XXX_new_token 'parse_md_stars@16^', d, 'html', 'tag', 'i', '<i>'\n            else\n              enter.star2 d;        send H.XXX_new_token 'parse_md_stars@17^', d, 'html', 'tag', 'b', '<b>'\n              position = { lnr1: d.lnr1, x1: d.x1 + 2, lnr2: d.lnr2, x2: d.x2, }\n              enter.star1 position; send H.XXX_new_token 'parse_md_stars@18^', \\\n                position, 'html', 'tag', 'i', '<i>'\n        #.....................................................................................................\n        else send d\n      return null\n"
  ]
}