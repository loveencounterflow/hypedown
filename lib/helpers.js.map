{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,CAAE,KAAF,EACE,KADF,EAEE,IAFF,EAGE,IAHF,EAIE,KAJF,EAKE,MALF,EAME,IANF,EAOE,IAPF,EAQE,OARF,CAAA,GAQ4B,GAAG,CAAC,GAAG,CAAC,WAAR,CAAoB,yBAApB,CAR5B,EALA;;;EAeA,CAAA,CAAE,GAAF,EACE,OADF,EAEE,IAFF,EAGE,GAHF,CAAA,GAG4B,GAAG,CAAC,GAHhC,EAfA;;;EAoBA,CAAA,CAAE,KAAF,CAAA,GAA4B,OAAA,CAAQ,OAAR,CAA5B,EApBA;;;EAsBA,CAAA,CAAE,SAAF,EACE,IADF,EAEE,KAFF,CAAA,GAE2B,KAF3B,EAtBA;;;EA2BA,IAAC,CAAA,aAAD,GAAiB,QAAA,CAAE,GAAF,EAAO,KAAP,EAAc,IAAd,EAAoB,GAApB,EAAyB,IAAzB,EAA+B,KAA/B,EAAsC,KAAtC,EAA6C,IAA7C,EAAmD,OAAO,IAA1D,EAAgE,SAAS,IAAzE,CAAA,EAAA;;AACjB,QAAA,IAAA,EAAA;IACE,IAAA,mEAA2B;IAC3B,CAAA,CAAE,KAAF,EACE,IADF,CAAA,GACY,KADZ;AAEA,WAAO,SAAA,CAAU,CAAA,CAAA,CAAA,CAAI,IAAJ,CAAA,CAAV,EAAsB;MAAE,IAAF;MAAQ,GAAR;MAAa,EAAA,EAAI,CAAA,CAAA,CAAG,IAAH,CAAA,CAAA,CAAA,CAAW,GAAX,CAAA,CAAjB;MAAmC,IAAnC;MAAyC,IAAzC;MAA+C,KAA/C;MAC3B,IAAA,EAAM,IADqB;MACf,EAAA,EAAI,IADW;MACL,IAAA,EAAM,IADD;MACO,EAAA,EAAI,IADX;MACiB,IADjB;MACuB,CAAA,EAAG;IAD1B,CAAtB;EALQ,EA3BjB;;;EAoCA,IAAC,CAAA,YAAD,GAAgB,QAAA,CAAE,KAAF,EAAS,QAAT,CAAA;AAChB,QAAA;IAAE,IAAoB,aAApB;AAAA,aAAO,MAAP;;IACA,6CAAiC,KAAjC;AAAA,aAAO,MAAP;;AACA,WAAO,KAAK,CAAC,EAAN,KAAY;EAHL;AApChB",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'HYPEDOWN-PARSER/HELPERS'\n#...........................................................................................................\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\n{ DATOM }                 = require 'datom'\n#...........................................................................................................\n{ new_datom\n  lets\n  stamp }                = DATOM\n\n#-----------------------------------------------------------------------------------------------------------\n@XXX_new_token = ( ref, token, mode, tid, name, value, start, stop, data = null, lexeme = null ) ->\n  ### TAINT recreation of `Interlex::XXX_new_token()` ###\n  jump      = lexeme?.jump ? null\n  { start\n    stop  } = token\n  return new_datom \"^#{mode}\", { mode, tid, mk: \"#{mode}:#{tid}\", jump, name, value, \\\n    lnr1: null, x1: null, lnr2: null, x2: null, data, $: ref, }\n\n#-----------------------------------------------------------------------------------------------------------\n@select_token = ( token, selector ) ->\n  return false unless token?\n  return false if token.$stamped ? false\n  return token.mk is selector\n\n"
  ]
}